services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  airflow-db:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - airflow-db:/var/lib/postgresql/data

# ---- One-off init (migrations + admin user) ----
airflow-init:
  build:
    context: ./airflow
  env_file: ../config/.env
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  depends_on:
    airflow-db:
      condition: service_healthy
  entrypoint: bash -c
  command: >
    "airflow db migrate &&
     airflow users create
       --username admin
       --password admin
       --firstname a
       --lastname b
       --role Admin
       --email admin@example.com || true"
  restart: "no"

# ---- Webserver ----
airflow-webserver:
  build:
    context: ./airflow
  env_file: ../config/.env
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  depends_on:
    airflow-init:
      condition: service_completed_successfully
  ports:
    - "8080:8080"
  volumes:
    - ../airflow/dags:/opt/airflow/dags
    - ../airflow/plugins:/opt/airflow/plugins
    - ../airflow/include:/opt/airflow/include
  command: airflow webserver

# ---- Scheduler ----
airflow-scheduler:
  build:
    context: ./airflow
  env_file: ../config/.env
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  depends_on:
    airflow-init:
      condition: service_completed_successfully
  volumes:
    - ../airflow/dags:/opt/airflow/dags
    - ../airflow/plugins:/opt/airflow/plugins
    - ../airflow/include:/opt/airflow/include
  command: airflow scheduler

  kafka-producer:
    build:
      context: ../kafka/producer
    env_file: ../config/.env
    depends_on:
      - kafka
    command: python produce_events.py

volumes:
  airflow-db:
